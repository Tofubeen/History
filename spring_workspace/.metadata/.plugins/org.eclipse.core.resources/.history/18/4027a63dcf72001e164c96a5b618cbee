package com.docmall.controller;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import com.docmall.service.MemberService;

import lombok.RequiredArgsConstructor;
import lombok.extern.log4j.Log4j;

@Log4j
@Controller
@RequestMapping("/member/*") // view밑으로 member 폴더를 만든다
@RequiredArgsConstructor//필드중에 final성격이 붙은 것을 매개변수 생성자를 만들어준다
public class MemberController {

	//https://dev-coco.tistory.com/70

	private final MemberService memberService;

	@GetMapping("/join")
	public void join() {

		log.info("called ..join");

	}

	//비동기방식 , ajax 문법으로호춣
	//아이디 중복체크
	//ResponseEntity? httpEntity를 상속받는 , 결과 데이터와 http 상태코드를 직접 제어할 수 있는
	//3가지 구성요소 httpstatus , httpHeaders, httpBody
	//ajax기능고 함께사용
	@GetMapping("/idCheck")
	public ResponseEntity<String> idCheck(String mbsp_id){

		log.info("아이디: " + mbsp_id);

		ResponseEntity<String> entity =null;

		//서비스 메서드 호출구문작업
		String idUse = "" ;
		if(memberService.idCheck(mbsp_id) != null) {
			idUse = "no"; //아이디가 존재하여, 사용 불가능
		}else {
			idUse = "yes";//아이디가 존재하지 않아, 사용 가능
		}

		entity = new ResponseEntity<String>(idUse, HttpStatus).ok);

		return entity;
	}


}
